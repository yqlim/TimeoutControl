/*!
 * TimeoutControl
 * Copyright (c) by Yong Quan Lim
 * Distributed under MIT license: https://github.com/yqlim/TimeoutControl
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.TimeoutControl=e()}(this,function(){"use strict";if("function"!=typeof setTimeout)throw new Error("Your environment does not support setTimeout.");function TimeoutControl(t,e){if(!(this instanceof TimeoutControl))throw new SyntaxError('TimeoutControl must be called with the keyword "new".');if(arguments.length<2)throw new TypeError("Failed to create TimeoutControl instance: at least 2 arguments required, but only "+arguments.length+" present.");if("function"!=typeof t)throw new TypeError("Failed to create TimeoutControl instance: first argument must be a callback function.");if("number"!=typeof e||e<0)throw new RangeError("Failed to create TimeoutControl instance: second argument must be a positive number.");this.params=Array.prototype.slice.call(arguments,2),this.duration=e,this.timeStart=(new Date).getTime(),this.timeStop=this.timeStart,this.callback=function(t){t.apply(null,this.params),this.timeStop=(new Date).getTime()}.bind(this,t),Object.defineProperty(this,"timeLeft",{get:function(){var t=this.duration-(this.timeStop-this.timeStart);return t<0?0:t}}),Object.defineProperty(this,"done",{get:function(){return 0===this.timeLeft}}),this.id=setTimeout(this.callback,this.duration)}return function n(t,e){var i;for(i in e)Object.defineProperty(t,i,e[i]);return t}(TimeoutControl.prototype,{pause:{writable:!0,configurable:!0,value:function(){clearTimeout(this.id),this.timeStop=(new Date).getTime()}},resume:{writable:!0,configurable:!0,value:function(){this.id=setTimeout(this.callback,this.timeLeft)}},restart:{writable:!0,configurable:!0,value:function(){clearTimeout(this.id),this.timeStart=(new Date).getTime(),this.timeStop=this.timeStart,this.id=setTimeout(this.callback,this.duration)}},clear:{writable:!0,configurable:!0,value:function(){clearTimeout(this.id),this.timeStart=(new Date).getTime(),this.timeStop=this.timeStart,this.id=null,this.done=!0}}}),TimeoutControl});